{"version":3,"sources":["reportWebVitals.js","components/Header.js","components/Form.js","components/Task.js","components/Tasks.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","HeaderWithButton","Form","onAdd","clear","useState","text","setText","day","setDay","reminder","setReminder","className","onSubmit","e","preventDefault","alert","id","type","placeholder","value","onChange","target","htmlFor","checked","currentTarget","onClick","Task","task","checkTask","Tasks","tasks","map","LOCAL_STORAGE_KEY","App","useEffect","storedTodos","JSON","parse","localStorage","getItem","setTasks","setItem","stringify","Header","Math","floor","random","newTask","filter","length","chOrNot","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d93e6cf4.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","\r\nconst HeaderWithButton = () =>{\r\n    return(\r\n        <header>\r\n            <h1>Task Manager App</h1>\r\n        </header>\r\n    )\r\n}\r\nexport default HeaderWithButton","import React,{useState,useEffect}  from \"react\"\r\n\r\nconst Form = ({onAdd, clear}) =>{\r\n\r\n    const [text, setText] = useState('');\r\n    const [day, setDay] = useState('');\r\n    const [reminder, setReminder] = useState('');\r\n\r\n\r\n    const onSubmit = (e) =>{\r\n        e.preventDefault()\r\n        if(!text){\r\n            alert('Please add a task')\r\n            return\r\n        }\r\n        onAdd({text,day,reminder})\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n\r\n    return(\r\n        <form className=\"add-form\" onSubmit={onSubmit}>\r\n            <div className=\"form-control todos\">\r\n\r\n                <input id=\"newTodo\"\r\n                       className=\"basic-slide\"\r\n                       type=\"text\"\r\n                       placeholder=\"Add Task\"\r\n                       value={text}\r\n                       onChange={(e)=>setText(e.target.value)}\r\n                />\r\n                <label htmlFor=\"newTodo\">Add new task:</label>\r\n            </div>\r\n            <div className='form-control'>\r\n                <label className=\"label\">\r\n                <input type=\"checkbox\"\r\n                       className=\"option-input checkbox\"\r\n                       checked={reminder}\r\n                       value={reminder}\r\n                       onChange={(e)=>setReminder(e.currentTarget.checked)} />\r\n                Reminder</label>\r\n            </div>\r\n\r\n            <div className=\"form-control \">\r\n                <label htmlFor=\"till\">Day</label>\r\n                <input id=\"till\" type=\"date\"\r\n                       value={day}\r\n                       onChange={(e)=>setDay(e.target.value)}\r\n                />\r\n\r\n            </div>\r\n\r\n\r\n            <button type=\"submit\">Save task</button>\r\n            <button className=\"clearBtn\" onClick={clear}>Clear</button>\r\n\r\n\r\n        </form>\r\n    )\r\n}\r\nexport default Form","// import {useState} from \"react\";\r\n\r\nconst Task = ({ task, checkTask}) => {\r\n    return (\r\n        <div className=\"task \">\r\n            <label className=\"label\">\r\n\r\n\r\n                <input type=\"checkbox\"\r\n                       checked={task.checked}\r\n                       onChange={(e)=>checkTask(e.currentTarget.checked,task.id)}\r\n                       className=\"option-input checkbox\"\r\n                />\r\n            {task.text}\r\n            </label>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\nexport default Task","import Task from \"./Task\"\r\nconst Tasks = ({tasks, checkTask}) =>{\r\n    return(\r\n        <>\r\n            {tasks.map((task)=> (\r\n                    <Task key={task.id}\r\n                          task={task}\r\n                          checkTask={checkTask}\r\n                    />\r\n                )\r\n            )}\r\n        </>\r\n    )\r\n};\r\nexport default Tasks","import React, { useState, useRef, useEffect } from 'react';\nimport HeaderWithButton from \"./components/Header\";\nimport Form from \"./components/Form\";\nimport Tasks from \"./components/Tasks\";\n\nconst LOCAL_STORAGE_KEY = 'todoApp.todos';\n\nfunction App() {\n    useEffect(() => {\n        const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n        if (storedTodos) setTasks(storedTodos)\n    }, [])\n\n\n    const [tasks,setTasks] = useState([\n        {\n            id:1,\n            text: \"Make a exercise\",\n            day: 'Aug 31 at 8:00pm',\n            reminder:true,\n            checked: false,\n        },\n        {\n            id:2,\n            text: \"Make a yoga\",\n            day: 'Aug 31 at 8:00pm',\n            reminder:true,\n            checked: false,\n\n        },\n        {\n            id:3,\n            text: \"Read book\",\n            day: 'Aug 31 at 8:00pm',\n            reminder:false,\n            checked:false\n        }\n    ]);\n\n\n    const checkTask = (chOrNot,id) =>{\n        setTasks(tasks.map(task=> task.id === id ? {...task, checked:!task.checked}:task))\n    }\n\n    const clearTask = (e)=>{\n        e.preventDefault();\n        setTasks(tasks.filter((task)=>task.checked !== true))\n    }\n    useEffect(() => {\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(tasks))\n    }, [tasks])\n    const addTask = (task) =>{\n        const id=Math.floor(Math.random()*10000)+1;\n        const newTask = {id, ...task};\n        setTasks([...tasks,newTask])\n    }\n\n\n    return (\n      <div>\n          <HeaderWithButton />\n          <Form onAdd={addTask} clear={clearTask}  />\n          <div className=\"todoLeft\"> {tasks.filter(task=>!task.checked).length} left to do</div>\n          <div className=\"taskList\">\n              <Tasks tasks={tasks} checkTask={checkTask} />\n          </div>\n\n      </div>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}